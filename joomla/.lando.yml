#
# package     Extly.Container
# subpackage  Lando Boilerplate - https://github.com/anibalsanchez/lando-lamp-boilerplate
#
# author      Extly, CB.
# copyright   Copyright (C) 2012-2025 Extly, CB <team@extly.com>
# license     MIT
# link        https://extly.com
#
# WORKING WITH JOOMLA - https://docs.lando.dev/plugins/joomla/index.html
#

# REQUIREMENTS: Lando 3

name: <NEW-CONTAINER-NAME>
recipe: lamp

proxy:
  appserver:
    - <NEW-CONTAINER-NAME>.lndo.site
  pma:
    - phpmyadmin.lndo.site
  mailhog:
    - mailhog.lndo.site

config:
  php: "8.4"
  database: mysql
  via: apache
  webroot: www
  xdebug: true
  config:
    php: config/php.ini

# Disable key loading - https://docs.lando.dev/config/ssh.html#customizing
keys: false

services:
  appserver:
    ports:
      # A nice handy known-local port  http://localhost:8080
      - "8080:80"

    # Bind my exposes services to all intefaces
    #  - "0.0.0.0::80"

    #
    # PHP / Adding or removing extensions
    # https://docs.devwithlando.io/tutorials/php.html#adding-or-removing-extensions
    #

    build_as_root:
      # Apache mod headers
      - a2enmod headers

      # Install xdebug-2.9.8, wait until Xdebug 3 is fully tested
      # - pecl uninstall xdebug
      # - pecl install xdebug-2.9.8

      # Install mcrypt for Akeeba JPS compatibility - PHP 7.4
      # - apt-get update -y
      # - apt-get install -y gcc make autoconf libc-dev pkg-config
      # - apt-get install -y libmcrypt-dev
      # - pecl channel-update pecl.php.net
      # - pecl install mcrypt-1.0.3
      # - docker-php-ext-enable mcrypt

      #
      # Uncommment this snippet to setup PHP XSL Library for SobiPro
      #
      # build_as_root:
      #   - apt-get update -y
      #   - apt-get install -y libxml2-dev libxslt-dev
      #   - docker-php-ext-install dom xmlrpc xsl

      #
      # Uncommment this snippet to setup Joomla 4 from the GitHub repository
      #
      # build_as_root:
      #   - apt-get update -y
      #   - apt-get install -y re2c libmhash-dev libmcrypt-dev file libgmp-dev
      #   - ln -s /usr/include/x86_64-linux-gnu/gmp.h /usr/local/include/
      #   - docker-php-ext-configure gmp
      #   - docker-php-ext-install dom xmlrpc gmp

  database:
    type: mysql
    # type: mysql:5.7
    # type: mysql:8.0
    portforward: 3306
    creds:
      user: <NEW-CONTAINER-NAME>db
      password: <NEW-CONTAINER-NAME>db
      database: <NEW-CONTAINER-NAME>db

  pma:
    type: phpmyadmin

  mailhog:
    type: mailhog
    portforward: 1025
    hogfrom:
      - appserver

  # To syncronize balanced front-ends based on Varnish with Redis PubSub
  # pubsub:
  #   type: redis
  #   portforward: 6379

  # To run node commands
  # node:
  #   type: node
  #   globals:
  #     gulp-cli: latest

env_file:
  # Secured procedure for installing Joomla with a remote database
  # https://docs.joomla.org/J3.x:Secured_procedure_for_installing_Joomla_with_a_remote_database
  - config/defaults.env

tooling:
  # Tooling Example
  # https://github.com/lando/lando/tree/master/examples/tooling

  # USING SCRIPTY THINGS
  # https://docs.devwithlando.io/config/services.html#using-scripty-things

  install:
    service: appserver
    description: "Command to install Joomla 3."
    cmd:
      - echo Installing Joomla ...
      - curl -L https://downloads.joomla.org/cms/joomla3/3-9-12/Joomla_3-9-12-Stable-Full_Package.tar.gz?format=gz |
        tar zxv -C $LANDO_WEBROOT

  install-j4:
    service: appserver
    description: "Command to install Joomla 4."
    cmd:
      - echo Installing Joomla 4 ...
      - curl -L https://github.com/joomla/joomla-cms/releases/download/4.0.0-alpha11/Joomla_4.0.0-alpha11-Alpha-Full_Package.tar.gz |
        tar zxv -C $LANDO_WEBROOT

  install-extension:
    service: appserver
    description: "Command to install an extension (Thanks to Akeeba https://github.com/akeeba/vagrant/blob/master/assets/joomla/install-joomla-extension.php)."
    cmd:
      - echo Installing the extension ...
      - cp $LANDO_MOUNT/config/install-joomla-extension.php $LANDO_WEBROOT/cli &&
        php $LANDO_WEBROOT/cli/install-joomla-extension.php --package="$LANDO_MOUNT/www/tmp/the-extension.gz" 2>/dev/null &&
        rm $LANDO_WEBROOT/cli/install-joomla-extension.php

  install-patchtester:
    service: appserver
    description: "Command to install the Joomla Patch Tester."
    cmd:
      - echo Installing the Patch Tester ...
      - curl -L https://github.com/joomla-extensions/patchtester/releases/download/3.0.0-beta4/com_patchtester.tar.gz > "$LANDO_WEBROOT/tmp/com_patchtester.tar.gz"
      - cp "$LANDO_MOUNT/config/install-joomla-extension.php" "$LANDO_WEBROOT/cli" &&
        php "$LANDO_WEBROOT/cli/install-joomla-extension.php" --package="$LANDO_WEBROOT/tmp/com_patchtester.tar.gz" 2>/dev/null &&
        rm "$LANDO_WEBROOT/cli/install-joomla-extension.php"

  dev-config:
    service: appserver
    description: "Apply my default configuration for JDevelopment"
    cmd:
      - echo Configuring my defaults in configuration.php for JDevelopment…
      - test -e $LANDO_MOUNT/www/configuration.php &&
        sh $LANDO_MOUNT/config/dev-configuration.sh

  kick-restore:
    service: appserver
    description: "Restore an Akeeba .jpa backup with Kickstart"
    cmd:
      - echo Restoring Akeeba .jpa backup …
      - cd $LANDO_WEBROOT &&
        wget -O kickstart-core-6-0-1-zip.zip "https://www.akeebabackup.com/download/akeeba-kickstart/6-0-1/kickstart-core-6-0-1-zip.zip" &&
        unzip kickstart-core-6-0-1-zip.zip kickstart.php &&
        php kickstart.php *.jpa &&
        rm kickstart.*

  unite-restore:
    service: appserver
    description: "Full restore of an Akeeba .jpa backup with Unite"
    cmd:
      - echo Restoring Akeeba .jpa backup …
      - test -e $LANDO_MOUNT/config/joomla-unite_tpl.xml &&
        sh $LANDO_MOUNT/config/unite-setup.sh *.jpa $LANDO_APP_NAME $LANDO_WEBROOT &&
        sh $LANDO_MOUNT/config/unite-setup-db.sh <NEW-CONTAINER-NAME>db <NEW-CONTAINER-NAME>db <NEW-CONTAINER-NAME>db &&
        cp /lando/unite.phar $LANDO_MOUNT/www &&
        cd $LANDO_MOUNT/www; php unite.phar joomla-unite.xml &&
        test -e $LANDO_MOUNT/www/configuration.php &&
        sh $LANDO_MOUNT/config/dev-configuration.sh &&
        rm $LANDO_MOUNT/www/unite.phar &&
        rm $LANDO_MOUNT/www/joomla-unite.xml

  unite-restore-s3:
    service: appserver
    description: "Full restore of an Akeeba .jpa backup with Unite from Amazon s3"
    cmd:
      - echo Resetting lando site $…
      - test -e $LANDO_MOUNT/config/unite-s3-setup.sh &&
        sh $LANDO_MOUNT/config/unite-s3-setup.sh <NEW-CONTAINER-NAME>db <NEW-CONTAINER-NAME>db <NEW-CONTAINER-NAME>db $LANDO_WEBROOT $LANDO_APP_NAME joomla-unite_tpl_s3.xml
      - sh $LANDO_MOUNT/config/unite-setup-db.sh <NEW-CONTAINER-NAME>db <NEW-CONTAINER-NAME>db <NEW-CONTAINER-NAME>db &&
        cp /lando/unite.phar $LANDO_MOUNT/www &&
        cd $LANDO_MOUNT/www; php unite.phar joomla-unite.xml &&
        test -e $LANDO_MOUNT/www/configuration.php &&
        sh $LANDO_MOUNT/config/dev-configuration.sh &&
        sh $LANDO_MOUNT/config/remove-unite-files.sh $LANDO_WEBROOT
    level: app
    options:
      jpa_filename:
        describe: The jpa filename to download
        passthrough: true
        interactive:
          type: input
          message: What is the backup filename (without .jpa extension)?
      s3_bucket:
        describe: The amazon s3 bucket
        passthrough: true
        interactive:
          type: input
          message: What is the name of the amazon s3 bucket?
          default: bucket-name
      s3_region:
        describe: The amazon s3 region
        passthrough: true
        interactive:
          type: input
          message: Input an amazon s3 region?
          default: eu-west-3
      s3_filepath:
        describe: The jpa filepath in the bucket
        passthrough: true
        interactive:
          type: input
          message: Input the file path?
          default: filepath/
  # npm:
  #   service: node
  # node:
  #   service: node
  # gulp:
  #   service: node
  # yarn:
  #   service: node
